<%= page_title 'Status' %>

<ul>
  <li><%= link_to 'Versions', '#versions' %></li>
  <li>
    Health
    <%- [:cacti, :json, :csv, :text_table].each do |format| %>
      <%= link_to "[#{format}]", status_health_path(format: format) %>
    <% end %>
    <%= link_to '[txt]', status_health_path(format: :txt) %>
  </li>
  <%- %w{cache delayed_job database_size users}.each do |type| %>
    <li>
      <%= link_to type.titleize, "##{type}"%>
      <%- [:cacti, :json, :csv, :text_table].each do |format| %>
        <%= link_to "[#{format}]", send("status_#{type}_path", format: format) %>
      <% end %>
    </li>
  <% end %>
</ul>

<a name="versions"/>
<h2>Versions</h2>
<p>Running commit <%= link_to @status.commit[:id], "https://github.com/robertgauld/OSMExtender/commit/#{@status.commit[:id]}" %> - <%= @status.commit[:title] %></p>
<p>On ruby <%= RUBY_VERSION %>p<%= RUBY_PATCHLEVEL%></p>

<a name="cache"/>
<h2>Cache</h2>
<%- cache = @status.cache %>
<%- used = cache[:ram_used] %>
<%- maximum = cache[:ram_max] %>
<%- if maximum.nil? || maximum.zero? %>
  <p>Using <%= number_to_human_size(used) %>.</p>
<% else %>
  <p>Using <%= number_to_human_size(used) %> of <%= number_to_human_size(maximum) %> (<%= number_to_percentage((used*100/maximum), precision: 1) %>).</p>
<% end %>
<p>There are <%= cache[:keys] %> keys in the cache.</p>
<%- cache_hits = cache[:cache_hits] %>
<%- cache_misses = cache[:cache_misses] %>
<%- cache_attempts = cache[:cache_attempts].to_f %>
<p>There have been <%= number_with_delimiter(cache_hits) %> (<%= number_to_percentage(cache[:cache_hits_percent], precision: 1) %>) cache hits and <%= number_with_delimiter(cache_misses) %> (<%= number_to_percentage(cache[:cache_misses_percent], precision: 1) %>) cache misses.</p>

<a name="delayed_job"/>
<h2>Delayed Job</h2>
<%- delayed_job = @status.delayed_job %>
<%- jobs = delayed_job[:jobs] %>
<table>
  <tr>
    <th>State</th>
    <th>Count</th>
  </tr>
  <%- [:locked, :failed, :total, :cron].each do |state| %>
    <tr>
      <td><%= state.to_s.titleize %></td>
      <td><%= jobs[state].inspect %></td>
    </tr>
  <%- end %>
</table>
<h3>Settings</h3>
<%- settings = delayed_job[:settings] %>
<table>
  <%- settings.each do |key, value| %>
    <tr>
      <td><%= key %></td>
      <td>
        <%- if value.is_a?(ActiveSupport::Duration) # It's a time %>
          <%- if value >= 3600 %><%= (value / 3600) %> hours<%- end %>
          <%- if value >= 60 %><%= ((value / 60) % 60 ) %> minutes<%- end %>
          <%= (value % 60) %> seconds
        <%- else %>
          <%= value.inspect %>
        <%- end %>
      </td>
    </tr>
  <%- end %>
</table>


<a name="database_size"/>
<h2>Database Size</h2>
<%- database_size = @status.database_size %>
<%- totals = database_size[:totals] %>
<table id="database-sizes">
  <thead>
    <tr>
      <th>Model</th>
      <th>Table</th>
      <th>Count</th>
      <th colspan="2">Size</th>
    </tr>
  </thead>
  <tbody>
    <%- database_size[:tables].each do |item| %>
      <tr>
        <td><%= item[:model] %></td>
        <td><%= item[:table] %></td>
        <td><%= item[:count] %></td>
        <td><%= item[:size] %></td>
        <td><%= number_to_human_size(item[:size]) %></td>
      </tr>
    <%- end %>
  </tbody>
  <tfoot>
    <tr>
      <td colspan="2" style="text-align: right;">Total (accross <%= database_size[:tables].length %> tables):</td>
      <td><%= totals[:count] %></td>
      <td><%= totals[:size] %></td>
      <td><%= number_to_human_size(totals[:size]) %></td>
    </tr>
  </tfoot>
</table>

<a name="users"/>
<h2>Users</h2>
<%- users = @status.users %>
<p>There are a total of <%= users[:total] %> users.</p>
<ul>
  <li><%= pluralize users[:unactivated], 'has', 'have' %> not yet activated their account.</li>
  <li><%= pluralize users[:activated], 'has', 'have' %> activated their account but not yet linked it to OSM.</li>
  <li><%= pluralize users[:connected], 'has', 'have' %> activated their account and linked it to OSM.</li>
</ul>
