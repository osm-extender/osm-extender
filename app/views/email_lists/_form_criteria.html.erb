  I would like these email addresses for members of
  <%= f.select :section_id, Osm::Section.get_all(current_user.osm_api).select{ |section| current_user.has_osm_permission?(section, :read, :member)}.map{ |section| ["#{section.group_name} : #{section.name}", section.id] } %>
  <br/>

  <%- contact_options = {'None'=>0, 'Only email 1'=>1, 'Only email 2'=>2, 'All emails'=>3, 'Enabled emails'=>4} %>
  <%= f.select :contact_member, contact_options %> <%= f.label :contact_member, 'from member.' %><br/>
  <%= f.select :contact_primary, contact_options %> <%= f.label :contact_primary, 'from primary contact 1.' %><br/>
  <%= f.select :contact_secondary, contact_options %> <%= f.label :contact_secondary, 'from primary contact 2.' %><br/>
  <%= f.select :contact_emergency, contact_options.except('Enabled emails') %> <%= f.label :contact_emergency, 'from emergency contact.' %><br/>

  For members who
  <%= f.select :match_type, {'are'=>true, 'are not'=>false} %>
  in the
  <%= f.select :match_grouping, {'Any'=>'0'}.merge(@groupings[@email_list.section_id]) %>
  <span id="grouping_name"><%= get_grouping_name(current_section.type) %></span>.

  <script type="text/javascript">
    var sections_data = jQuery.parseJSON("<%= @sections_data %>");
  </script>

  <br/>
